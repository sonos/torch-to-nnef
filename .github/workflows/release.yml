# Publish package on main branch if it's tagged with 'v*'

name: release & publish workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "release"
  release:
    name: Create Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-versions: [3.10]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Get Changelog Entry
        id: changelog_reader
        #  do not use latest that come with node 20.0 and need GLIB: 2.28 not availlable
        #  in targeted host
        uses: mindsers/changelog-reader-action@v2.2.0
        with:
          validation_depth: 10
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Build wheels and source tarball
        run: >-
          uv build

      - name: show temporary files
        run: >-
          ls -l

      - name: create github release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          files: dist/*.whl
          draft: false
          prerelease: false

      - name: publish to SONOS python registry
        shell: bash
        env:
            PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv publish --token $PYPI_TOKEN
