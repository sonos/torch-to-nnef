# This is a basic workflow to help you get started with Actions

name: dev workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  prepare:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create matrix
        id: create_matrix
        uses: fabiocaccamo/create-matrix-action@v3
        with:
          matrix: |
            python-version {3.9}, tox-env {"py39", "torch_1_10", "torch_1_13"}
            python-version {3.13}, tox-env {"py313", "torch_2_2", "format_check", "static_check"}

    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

  test:

    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.prepare.outputs.matrix)}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # disable free space as we go for managed instance
      # - name: Free Disk Space (Ubuntu)
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     # this might remove tools that are actually needed,
      #     # when set to "true" but frees about 6 GB
      #     tool-cache: true
      #
      #     # all of these default to true, but feel free to set to
      #     # "false" if necessary for your workflow
      #     android: true
      #     dotnet: true
      #     haskell: true
      #     large-packages: true
      #     swap-storage: true
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox==4.23.2

      - name: test with tox
        run: tox run -e ${{ matrix.tox-env }}
